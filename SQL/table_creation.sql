CREATE TABLE USERS (
	ID 		NUMBER		PRIMARY KEY,
	username 	VARCHAR2(50),
	first_name	VARCHAR2(20),
	last_name	VARCHAR2(20)
); 	

CREATE TABLE FRIENDS (
	user_ID1	NUMBER 	REFERENCES USERS(ID),
	user_ID2	NUMBER 	REFERENCES USERS(ID)
);

CREATE TABLE LOCATIONS (
	ID	NUMBER		PRIMARY KEY,
	name	VARCHAR2(20)	NOT NULL,
	street	VARCHAR2(30),
	city	VARCHAR2(20)	NOT NULL,
	state	VARCHAR2(20)	NOT NULL,
	country	VARCHAR2(20)	NOT NULL,
	zip	NUMBER
);

CREATE TABLE VISITED_LOCATIONS (
	user_ID		NUMBER 	REFERENCES USERS(ID),
	location_ID	NUMBER 	REFERENCES LOCATIONS(ID)
);

CREATE TABLE DREAM_LOCATIONS (
	user_ID		NUMBER 	REFERENCES USERS(ID),
	location_ID	NUMBER 	REFERENCES LOCATIONS(ID)
);

CREATE TABLE TRIPS (
	ID		NUMBER		PRIMARY KEY,
	name		VARCHAR2(20)	NOT NULL,
	start_date	DATE,
	end_date	DATE,
	privacy		NUMBER,
	rating		NUMBER,
	trip_type	VARCHAR2(10),
	owner		NUMBER 		REFERENCES USERS(ID)
);

CREATE TABLE TRIPS_USERS (
	user_ID		NUMBER 	REFERENCES USERS(ID),  /*total participation of users is ensured because there is owner for each trip*/
	trip_ID		NUMBER 	REFERENCES TRIPS(ID) 
);

CREATE TABLE TRIPS_LOCATIONS (
	location_ID	NUMBER 	REFERENCES LOCATIONS(ID), /*we need to ensure total participation of locations*/
	trip_ID		NUMBER 	REFERENCES TRIPS(ID) 
);

CREATE TABLE TRIPS_COMMENTS (
	trip_ID 	NUMBER REFERENCES TRIPS(ID),
	trip_comment	VARCHAR2(100)
);	

CREATE TABLE AFFILIATIONS (
	ID 	NUMBER 		PRIMARY KEY,
	name 	VARCHAR2(20),
	aff_type VARCHAR2(20)
);

CREATE TABLE AFFILIATED_TO (
	user_ID		NUMBER 	REFERENCES USERS(ID), 
	affiliation_ID	NUMBER 	REFERENCES AFFILIATIONS(ID) 
);	

CREATE TABLE ALBUMS (
	ID 		NUMBER 		PRIMARY KEY,
	trip_ID 	NUMBER 		REFERENCES TRIPS(ID),
	name		VARCHAR2(20),
	privacy		NUMBER
);

CREATE TABLE PHOTOS (
	ID 		NUMBER		PRIMARY KEY,
	album_ID	NUMBER		REFERENCES ALBUMS(ID),
	likes 		NUMBER,
	tagline		VARCHAR2(50),
	privacy		NUMBER,
	pic_date	DATE
);

CREATE TABLE VIDEOS (
	ID 		NUMBER		PRIMARY KEY,
	album_ID	NUMBER 		REFERENCES ALBUMS(ID),
	likes 		NUMBER,
	tagline		VARCHAR2(50),
	privacy		NUMBER,
	video_date	DATE
);

CREATE TABLE PHOTOS_COMMENTS (
	photo_ID 	NUMBER		REFERENCES PHOTOS(ID),
	photo_comment 	VARCHAR2(100)
);	

CREATE TABLE VIDEOS_COMMENTS (
	video_ID 	NUMBER		REFERENCES VIDEOS(ID),
	video_comment 	VARCHAR2(100)
);	
